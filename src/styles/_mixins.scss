@use 'sass:color';
@use 'variables' as v;

// Animation Mixins
@mixin fade-in($duration: 0.3s) {
    @keyframes fadeIn {
        from {
            opacity: 0;
        }
        to {
            opacity: 1;
        }
    }
    animation: fadeIn $duration ease-in;
}

@mixin slide-in($direction: 'left', $distance: 20px, $duration: 0.3s) {
    @keyframes slideIn {
        from {
            opacity: 0;
            @if $direction == 'left' {
                transform: translateX(-$distance);
            } @else if $direction == 'right' {
                transform: translateX($distance);
            } @else if $direction == 'up' {
                transform: translateY($distance);
            } @else if $direction == 'down' {
                transform: translateY(-$distance);
            }
        }
        to {
            opacity: 1;
            transform: translate(0);
        }
    }
    animation: slideIn $duration ease-out;
}

// Layout Mixins
@mixin flex($direction: row, $justify: flex-start, $align: stretch) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
}

@mixin flex-center {
    display: flex;
    align-items: center;
    justify-content: center;
}

@mixin grid($columns: 1, $gap: v.$spacing-base) {
    display: grid;
    grid-template-columns: repeat($columns, 1fr);
    gap: $gap;
}

// Responsive Mixins
@mixin mobile {
    @media screen and (max-width: v.$mobile) {
        @content;
    }
}

@mixin tablet {
    @media screen and (min-width: v.$tablet) {
        @content;
    }
}

@mixin desktop {
    @media screen and (min-width: v.$desktop) {
        @content;
    }
}

@mixin large-desktop {
    @media screen and (min-width: v.$large-desktop) {
        @content;
    }
}

// Component Mixins
@mixin ios-button($bg-color: v.$ios-blue, $text-color: white) {
    padding: v.$spacing-sm v.$spacing-base;
    border-radius: v.$border-radius-full;
    background-color: $bg-color;
    color: $text-color;
    font-size: v.$font-size-base;
    font-weight: v.$font-weight-semibold;
    border: none;
    cursor: pointer;
    transition: v.$transition-base;
    min-height: 44px;
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    
    &:hover {
        transform: translateY(-2px);
        box-shadow: v.$shadow-lg;
        background-color: color.adjust($bg-color, $lightness: -5%);
    }

    &:active {
        transform: translateY(0);
    }
}

@mixin ios-card {
    background-color: v.$ios-background;
    border-radius: v.$border-radius-base;
    box-shadow: v.$shadow-base;
    transition: v.$transition-base;
    
    &:hover {
        transform: translateY(-2px);
        box-shadow: v.$shadow-lg;
    }
}

// Typography Mixins
@mixin text-truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

@mixin text-clamp($lines: 3) {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
}

@mixin focus-outline {
    outline: 3px solid rgba(v.$ios-blue, 0.5);
    outline-offset: 2px;
}

// Loading Mixins
@mixin skeleton-loading {
    background: linear-gradient(
        90deg,
        rgba(v.$ios-light-gray, 0.6) 25%,
        rgba(v.$ios-light-gray, 0.8) 37%,
        rgba(v.$ios-light-gray, 0.6) 63%
    );
    background-size: 400% 100%;
    animation: skeleton-loading 1.4s ease infinite;
}

@keyframes skeleton-loading {
    0% {
        background-position: 100% 50%;
    }
    100% {
        background-position: 0 50%;
    }
}

// Transition Mixin
@mixin transition($property: all, $duration: 0.3s, $timing: ease) {
    transition: $property $duration $timing;
}

// Container Mixin
@mixin container($max-width: v.$container-max-width) {
    width: 100%;
    max-width: $max-width;
    margin-left: auto;
    margin-right: auto;
    padding-left: v.$spacing-base;
    padding-right: v.$spacing-base;
}